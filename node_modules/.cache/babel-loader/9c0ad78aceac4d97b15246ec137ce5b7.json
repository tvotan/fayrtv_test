{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from'react';import{Icon,Divider,Radio,Message,Input,Button,Label}from'semantic-ui-react';// import { SignInButton } from '../TopBar/TopBar';\nimport{getCurrentSettings,updateSettings}from'./LocalSettings';import axios from'axios';import{serverPath}from'../../utils';export var SettingsTab=function SettingsTab(_ref){var hide=_ref.hide,user=_ref.user,roomLock=_ref.roomLock,setRoomLock=_ref.setRoomLock,socket=_ref.socket,isSubscriber=_ref.isSubscriber,roomId=_ref.roomId;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),updateTS=_useState2[0],setUpdateTS=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),vanity=_useState4[0],setVanity=_useState4[1];var _useState5=useState(undefined),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(undefined),_useState8=_slicedToArray(_useState7,2),owner=_useState8[0],setOwner=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),validVanity=_useState10[0],setValidVanity=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),validVanityLoading=_useState12[0],setValidVanityLoading=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),roomLink=_useState14[0],setRoomLink=_useState14[1];useEffect(function(){if(socket){socket.emit('CMD:getRoomState');var handleRoomState=function handleRoomState(data){setOwner(data.owner);setVanity(data.vanity);setPassword(data.password);setRoomLink(getRoomLink(data.vanity));};var getRoomLink=function getRoomLink(vanity){if(vanity){return\"\".concat(window.location.origin,\"/r/\").concat(vanity);}return\"\".concat(window.location.origin).concat(roomId.replace('/','#'));};socket.on('REC:getRoomState',handleRoomState);return function cleanup(){socket.off('REC:getRoomState',handleRoomState);};}},[socket,roomId]);var setRoomState=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var token;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return user===null||user===void 0?void 0:user.getIdToken();case 2:token=_context.sent;socket.emit('CMD:setRoomState',_objectSpread({uid:user===null||user===void 0?void 0:user.uid,token:token},data));case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}(),[socket,user]);var setRoomOwner=useCallback(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var token;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return user===null||user===void 0?void 0:user.getIdToken();case 2:token=_context2.sent;socket.emit('CMD:setRoomOwner',_objectSpread({uid:user===null||user===void 0?void 0:user.uid,token:token},data));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref3.apply(this,arguments);};}(),[socket,user]);var checkValidVanity=useCallback(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(input){var response,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(input){_context3.next=3;break;}setValidVanity(true);return _context3.abrupt(\"return\");case 3:setValidVanityLoading(true);_context3.next=6;return axios.get(serverPath+'/resolveRoom/'+input);case 6:response=_context3.sent;data=response.data;setValidVanityLoading(false);// console.log(data.vanity, vanity);\nif(data&&data.vanity&&data.vanity!==vanity){// Already exists and doesn't match current room\nsetValidVanity(false);}else{setValidVanity(true);}case 10:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref4.apply(this,arguments);};}(),[setValidVanity,vanity]);var lockDisabled=!Boolean(user)||Boolean(roomLock&&roomLock!==(user===null||user===void 0?void 0:user.uid));return/*#__PURE__*/React.createElement(\"div\",{style:{display:hide?'none':'block',color:'white'}},/*#__PURE__*/React.createElement(\"div\",{className:\"sectionHeader\"},\"Room Settings\"),!user&&/*#__PURE__*/React.createElement(Message,{color:\"yellow\",size:\"tiny\"},\"You need to be signed in to change these settings.\"),/*#__PURE__*/React.createElement(SettingRow,{icon:roomLock?'lock':'lock open',name:\"Lock Room\",description:\"Only the person who locked the room can control the video.\",checked:Boolean(roomLock),disabled:lockDisabled,onChange:function onChange(e,data){return setRoomLock(data.checked);}}),/*#__PURE__*/React.createElement(SettingRow,{icon:'clock',name:\"Make Room Permanent\",description:\"Standard rooms are deleted after one day of inactivity. Permanent rooms aren't deleted and can have passwords/custom URLs. Free users can only have one permanent room at a time.\",checked:Boolean(owner),disabled:Boolean(owner&&owner!==(user===null||user===void 0?void 0:user.uid)),onChange:function onChange(e,data){return setRoomOwner({undo:!data.checked});}}),owner&&owner===(user===null||user===void 0?void 0:user.uid)&&/*#__PURE__*/React.createElement(\"div\",{className:\"sectionHeader\"},\"Admin Settings\"),owner&&owner===(user===null||user===void 0?void 0:user.uid)&&/*#__PURE__*/React.createElement(SettingRow,{icon:'key',name:\"Set Room Password\",description:\"Users must know this password in order to join the room.\",content:/*#__PURE__*/React.createElement(Input,{value:password,onChange:function onChange(e){return setPassword(e.target.value);},fluid:true}),disabled:false}),owner&&owner===(user===null||user===void 0?void 0:user.uid)&&/*#__PURE__*/React.createElement(SettingRow,{icon:'linkify',name:\"Set Custom Room URL\",description:\"Set a custom URL for this room. Inappropriate names may be revoked.\",checked:Boolean(roomLock),disabled:!isSubscriber,subOnly:true,content:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Input,{value:vanity,disabled:!isSubscriber,onChange:function onChange(e){checkValidVanity(e.target.value);setVanity(e.target.value);},label:/*#__PURE__*/React.createElement(Label,null,\"\".concat(window.location.origin,\"/r/\")),loading:validVanityLoading,fluid:true,size:\"mini\",icon:true,action:validVanity?/*#__PURE__*/React.createElement(Icon,{name:\"checkmark\",color:\"green\"}):/*#__PURE__*/React.createElement(Icon,{name:\"close\",color:\"red\"})}),/*#__PURE__*/React.createElement(Button,{size:\"mini\",fluid:true,icon:true,labelPosition:\"left\",color:\"orange\",title:\"Copy link to clipboard\",onClick:function onClick(){navigator.clipboard.writeText(roomLink);}},/*#__PURE__*/React.createElement(Icon,{name:\"copy\"}),roomLink),/*#__PURE__*/React.createElement(\"p\",null))}),/*#__PURE__*/React.createElement(\"p\",null),owner&&owner===(user===null||user===void 0?void 0:user.uid)&&/*#__PURE__*/React.createElement(Button,{primary:true,disabled:!validVanity,labelPosition:\"left\",icon:true,fluid:true,onClick:function onClick(){return setRoomState({vanity:vanity,password:password});}},/*#__PURE__*/React.createElement(Icon,{name:\"save\"}),\"Save Admin Settings\"),/*#__PURE__*/React.createElement(\"div\",{className:\"sectionHeader\"},\"Local Settings\"),/*#__PURE__*/React.createElement(SettingRow,{updateTS:updateTS,icon:\"bell\",name:\"Disable chat notification sound\",description:\"Don't play a sound when a chat message is sent while you're on another tab\",checked:Boolean(getCurrentSettings().disableChatSound),disabled:false,onChange:function onChange(e,data){updateSettings(JSON.stringify(_objectSpread(_objectSpread({},getCurrentSettings()),{},{disableChatSound:data.checked})));setUpdateTS(Number(new Date()));}}));};var SettingRow=function SettingRow(_ref5){var icon=_ref5.icon,name=_ref5.name,description=_ref5.description,checked=_ref5.checked,disabled=_ref5.disabled,onChange=_ref5.onChange,updateTS=_ref5.updateTS,content=_ref5.content,subOnly=_ref5.subOnly;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Divider,{inverted:true,horizontal:true}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex'}},/*#__PURE__*/React.createElement(Icon,{size:\"large\",name:icon}),/*#__PURE__*/React.createElement(\"div\",null,name,' ',subOnly?/*#__PURE__*/React.createElement(Label,{size:\"mini\",color:\"orange\"},\"Subscriber only\"):null),!content&&/*#__PURE__*/React.createElement(Radio,{style:{marginLeft:'auto'},toggle:true,checked:checked,disabled:disabled,onChange:onChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"smallText\"},description),content));};","map":{"version":3,"sources":["/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/src/components/Settings/SettingsTab.tsx"],"names":["React","useState","useEffect","useCallback","Icon","Divider","Radio","Message","Input","Button","Label","getCurrentSettings","updateSettings","axios","serverPath","SettingsTab","hide","user","roomLock","setRoomLock","socket","isSubscriber","roomId","updateTS","setUpdateTS","undefined","vanity","setVanity","password","setPassword","owner","setOwner","validVanity","setValidVanity","validVanityLoading","setValidVanityLoading","roomLink","setRoomLink","emit","handleRoomState","data","getRoomLink","window","location","origin","replace","on","cleanup","off","setRoomState","getIdToken","token","uid","setRoomOwner","checkValidVanity","input","get","response","lockDisabled","Boolean","display","color","e","checked","undo","target","value","navigator","clipboard","writeText","disableChatSound","JSON","stringify","Number","Date","SettingRow","icon","name","description","disabled","onChange","content","subOnly","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Icon,\n  Divider,\n  Radio,\n  CheckboxProps,\n  Message,\n  Input,\n  Button,\n  Label,\n} from 'semantic-ui-react';\n// import { SignInButton } from '../TopBar/TopBar';\nimport { getCurrentSettings, updateSettings } from './LocalSettings';\nimport { Socket } from 'socket.io';\nimport axios from 'axios';\nimport { serverPath } from '../../utils';\n\ninterface SettingsTabProps {\n  hide: boolean;\n  user: firebase.User | undefined;\n  roomLock: string;\n  setRoomLock: Function;\n  socket: Socket;\n  isSubscriber: boolean;\n  roomId: string;\n}\n\nexport const SettingsTab = ({\n  hide,\n  user,\n  roomLock,\n  setRoomLock,\n  socket,\n  isSubscriber,\n  roomId,\n}: SettingsTabProps) => {\n  const [updateTS, setUpdateTS] = useState(0);\n  const [vanity, setVanity] = useState<string | undefined>(undefined);\n  const [password, setPassword] = useState<string | undefined>(undefined);\n  const [owner, setOwner] = useState<string | undefined>(undefined);\n  const [validVanity, setValidVanity] = useState(true);\n  const [validVanityLoading, setValidVanityLoading] = useState(false);\n  const [roomLink, setRoomLink] = useState<string>('');\n  useEffect(() => {\n    if (socket) {\n      socket.emit('CMD:getRoomState');\n      const handleRoomState = (data: any) => {\n        setOwner(data.owner);\n        setVanity(data.vanity);\n        setPassword(data.password);\n        setRoomLink(getRoomLink(data.vanity));\n      };\n      const getRoomLink = (vanity: string) => {\n        if (vanity) {\n          return `${window.location.origin}/r/${vanity}`;\n        }\n        return `${window.location.origin}${roomId.replace('/', '#')}`;\n      };\n      socket.on('REC:getRoomState', handleRoomState);\n      return function cleanup() {\n        socket.off('REC:getRoomState', handleRoomState);\n      };\n    }\n  }, [socket, roomId]);\n  const setRoomState = useCallback(\n    async (data: any) => {\n      const token = await user?.getIdToken();\n      socket.emit('CMD:setRoomState', {\n        uid: user?.uid,\n        token,\n        ...data,\n      });\n    },\n    [socket, user]\n  );\n  const setRoomOwner = useCallback(\n    async (data: any) => {\n      const token = await user?.getIdToken();\n      socket.emit('CMD:setRoomOwner', {\n        uid: user?.uid,\n        token,\n        ...data,\n      });\n    },\n    [socket, user]\n  );\n  const checkValidVanity = useCallback(\n    async (input: string) => {\n      if (!input) {\n        setValidVanity(true);\n        return;\n      }\n      setValidVanityLoading(true);\n      const response = await axios.get(serverPath + '/resolveRoom/' + input);\n      const data = response.data;\n      setValidVanityLoading(false);\n      // console.log(data.vanity, vanity);\n      if (data && data.vanity && data.vanity !== vanity) {\n        // Already exists and doesn't match current room\n        setValidVanity(false);\n      } else {\n        setValidVanity(true);\n      }\n    },\n    [setValidVanity, vanity]\n  );\n  const lockDisabled =\n    !Boolean(user) || Boolean(roomLock && roomLock !== user?.uid);\n\n  return (\n    <div style={{ display: hide ? 'none' : 'block', color: 'white' }}>\n      <div className=\"sectionHeader\">Room Settings</div>\n      {!user && (\n        <Message color=\"yellow\" size=\"tiny\">\n          You need to be signed in to change these settings.\n        </Message>\n      )}\n      <SettingRow\n        icon={roomLock ? 'lock' : 'lock open'}\n        name={`Lock Room`}\n        description=\"Only the person who locked the room can control the video.\"\n        checked={Boolean(roomLock)}\n        disabled={lockDisabled}\n        onChange={(e, data) => setRoomLock(data.checked)}\n      />\n      {\n        <SettingRow\n          icon={'clock'}\n          name={`Make Room Permanent`}\n          description=\"Standard rooms are deleted after one day of inactivity. Permanent rooms aren't deleted and can have passwords/custom URLs. Free users can only have one permanent room at a time.\"\n          checked={Boolean(owner)}\n          disabled={Boolean(owner && owner !== user?.uid)}\n          onChange={(e, data) => setRoomOwner({ undo: !data.checked })}\n        />\n      }\n      {owner && owner === user?.uid && (\n        <div className=\"sectionHeader\">Admin Settings</div>\n      )}\n      {owner && owner === user?.uid && (\n        <SettingRow\n          icon={'key'}\n          name={`Set Room Password`}\n          description=\"Users must know this password in order to join the room.\"\n          content={\n            <Input\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              fluid\n            />\n          }\n          disabled={false}\n        />\n      )}\n      {owner && owner === user?.uid && (\n        <SettingRow\n          icon={'linkify'}\n          name={`Set Custom Room URL`}\n          description=\"Set a custom URL for this room. Inappropriate names may be revoked.\"\n          checked={Boolean(roomLock)}\n          disabled={!isSubscriber}\n          subOnly={true}\n          content={\n            <React.Fragment>\n              <Input\n                value={vanity}\n                disabled={!isSubscriber}\n                onChange={(e) => {\n                  checkValidVanity(e.target.value);\n                  setVanity(e.target.value);\n                }}\n                label={<Label>{`${window.location.origin}/r/`}</Label>}\n                loading={validVanityLoading}\n                fluid\n                size=\"mini\"\n                icon\n                action={\n                  validVanity ? (\n                    <Icon name=\"checkmark\" color=\"green\" />\n                  ) : (\n                    <Icon name=\"close\" color=\"red\" />\n                  )\n                }\n              ></Input>\n              <Button\n                size=\"mini\"\n                fluid\n                icon\n                labelPosition=\"left\"\n                color=\"orange\"\n                title=\"Copy link to clipboard\"\n                onClick={() => {\n                  navigator.clipboard.writeText(roomLink);\n                }}\n              >\n                <Icon name=\"copy\" />\n                {roomLink}\n              </Button>\n              <p />\n            </React.Fragment>\n          }\n        />\n      )}\n      <p />\n      {owner && owner === user?.uid && (\n        <Button\n          primary\n          disabled={!validVanity}\n          labelPosition=\"left\"\n          icon\n          fluid\n          onClick={() =>\n            setRoomState({\n              vanity: vanity,\n              password: password,\n            })\n          }\n        >\n          <Icon name=\"save\" />\n          Save Admin Settings\n        </Button>\n      )}\n      {/* MEDIA_PATH */}\n      <div className=\"sectionHeader\">Local Settings</div>\n      <SettingRow\n        updateTS={updateTS}\n        icon=\"bell\"\n        name=\"Disable chat notification sound\"\n        description=\"Don't play a sound when a chat message is sent while you're on another tab\"\n        checked={Boolean(getCurrentSettings().disableChatSound)}\n        disabled={false}\n        onChange={(e, data) => {\n          updateSettings(\n            JSON.stringify({\n              ...getCurrentSettings(),\n              disableChatSound: data.checked,\n            })\n          );\n          setUpdateTS(Number(new Date()));\n        }}\n      />\n    </div>\n  );\n};\n\nconst SettingRow = ({\n  icon,\n  name,\n  description,\n  checked,\n  disabled,\n  onChange,\n  updateTS,\n  content,\n  subOnly,\n}: {\n  icon: string;\n  name: string;\n  description: React.ReactNode;\n  checked?: boolean;\n  disabled: boolean;\n  updateTS?: number;\n  onChange?: (e: React.FormEvent, data: CheckboxProps) => void;\n  content?: React.ReactNode;\n  subOnly?: boolean;\n}) => {\n  return (\n    <React.Fragment>\n      <Divider inverted horizontal />\n      <div>\n        <div style={{ display: 'flex' }}>\n          <Icon size=\"large\" name={icon as any} />\n          <div>\n            {name}{' '}\n            {subOnly ? (\n              <Label size=\"mini\" color=\"orange\">\n                Subscriber only\n              </Label>\n            ) : null}\n          </div>\n          {!content && (\n            <Radio\n              style={{ marginLeft: 'auto' }}\n              toggle\n              checked={checked}\n              disabled={disabled}\n              onChange={onChange}\n            />\n          )}\n        </div>\n        <div className=\"smallText\">{description}</div>\n        {content}\n      </div>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}