{"ast":null,"code":"import _classCallCheck from \"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar WebVTTConverter = /*#__PURE__*/function () {\n  function WebVTTConverter(resource) {\n    _classCallCheck(this, WebVTTConverter);\n\n    this.resource = resource;\n  }\n\n  _createClass(WebVTTConverter, [{\n    key: \"blobToBuffer\",\n    value: function blobToBuffer() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.addEventListener('loadend', function (event) {\n          var buf = event.target.result;\n          resolve(new Uint8Array(buf));\n        });\n        reader.addEventListener('error', function () {\n          return reject('Error while reading the Blob object');\n        });\n        reader.readAsArrayBuffer(_this.resource);\n      });\n    }\n    /**\n     * @param {*} blob\n     * @param {*} success\n     * @param {*} fail\n     */\n\n  }, {\n    key: \"getURL\",\n    value: function getURL() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!(_this2.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n        if (!FileReader) return reject('No FileReader constructor found');\n        if (!TextDecoder) return reject('No TextDecoder constructor found');\n        return WebVTTConverter.blobToString(_this2.resource, function (decoded) {\n          var vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          var text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          var blob = new Blob([text], {\n            type: 'text/vtt'\n          });\n          _this2.objectURL = URL.createObjectURL(blob);\n          return resolve(_this2.objectURL);\n        }, function () {\n          _this2.blobToBuffer().then(function (buffer) {\n            var utf8str = new TextDecoder('utf-8').decode(buffer);\n            var vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n            var text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n            var blob = new Blob([text], {\n              type: 'text/vtt'\n            });\n            _this2.objectURL = URL.createObjectURL(blob);\n            return resolve(_this2.objectURL);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"release\",\n    value: function release() {\n      URL.createObjectURL(this.objectURL);\n    }\n  }], [{\n    key: \"blobToString\",\n    value: function blobToString(blob, success, fail) {\n      var reader = new FileReader();\n      reader.addEventListener('loadend', function (event) {\n        var text = event.target.result;\n        success(text);\n      });\n      reader.addEventListener('error', function () {\n        return fail();\n      });\n      reader.readAsText(blob);\n    }\n    /**\n     * @param {*} utf8str\n     */\n\n  }, {\n    key: \"toVTT\",\n    value: function toVTT(utf8str) {\n      return utf8str.replace(/\\{\\\\([ibu])\\}/g, '</$1>').replace(/\\{\\\\([ibu])1\\}/g, '<$1>').replace(/\\{([ibu])\\}/g, '<$1>').replace(/\\{\\/([ibu])\\}/g, '</$1>').replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2').concat('\\r\\n\\r\\n');\n    }\n    /**\n     * @param {*} str\n     */\n\n  }, {\n    key: \"toTypedArray\",\n    value: function toTypedArray(str) {\n      var result = [];\n      str.split('').forEach(function (each) {\n        result.push(parseInt(each.charCodeAt(), 16));\n      });\n      return Uint8Array.from(result);\n    }\n  }]);\n\n  return WebVTTConverter;\n}();\n\nwindow.WebVTTConverter = WebVTTConverter;\nexport default WebVTTConverter;","map":{"version":3,"sources":["/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/srt-webvtt/index.js"],"names":["WebVTTConverter","resource","Promise","resolve","reject","reader","FileReader","addEventListener","event","buf","target","result","Uint8Array","readAsArrayBuffer","Blob","TextDecoder","blobToString","decoded","vttString","text","concat","toVTT","blob","type","objectURL","URL","createObjectURL","blobToBuffer","then","buffer","utf8str","decode","success","fail","readAsText","replace","str","split","forEach","each","push","parseInt","charCodeAt","from","window"],"mappings":"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","sourcesContent":["class WebVTTConverter {\n  constructor(resource) {\n    this.resource = resource;\n  }\n\n  blobToBuffer() {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.addEventListener('loadend', (event) => {\n        const buf = event.target.result;\n        resolve(new Uint8Array(buf));\n      });\n      reader.addEventListener('error', () => reject('Error while reading the Blob object'));\n      reader.readAsArrayBuffer(this.resource);\n    });\n  }\n  /**\n   * @param {*} blob\n   * @param {*} success\n   * @param {*} fail\n   */\n  static blobToString(blob, success, fail) {\n    const reader = new FileReader();\n    reader.addEventListener('loadend', (event) => {\n      const text = event.target.result;\n      success(text);\n    });\n    reader.addEventListener('error', () => fail());\n    reader.readAsText(blob);\n  }\n  /**\n   * @param {*} utf8str\n   */\n  static toVTT(utf8str) {\n    return utf8str\n      .replace(/\\{\\\\([ibu])\\}/g, '</$1>')\n      .replace(/\\{\\\\([ibu])1\\}/g, '<$1>')\n      .replace(/\\{([ibu])\\}/g, '<$1>')\n      .replace(/\\{\\/([ibu])\\}/g, '</$1>')\n      .replace(/(\\d\\d:\\d\\d:\\d\\d),(\\d\\d\\d)/g, '$1.$2')\n      .concat('\\r\\n\\r\\n');\n  }\n  /**\n   * @param {*} str\n   */\n  static toTypedArray(str) {\n    const result = [];\n    str.split('').forEach((each) => {\n      result.push(parseInt(each.charCodeAt(), 16));\n    });\n    return Uint8Array.from(result);\n  }\n\n  getURL() {\n    return new Promise((resolve, reject) => {\n      if (!(this.resource instanceof Blob)) return reject('Expecting resource to be a Blob but something else found.');\n      if (!(FileReader)) return reject('No FileReader constructor found');\n      if (!TextDecoder) return reject('No TextDecoder constructor found');\n      return WebVTTConverter.blobToString(\n        this.resource,\n        (decoded) => {\n          const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n          const text = vttString.concat(WebVTTConverter.toVTT(decoded));\n          const blob = new Blob([text], { type: 'text/vtt' });\n          this.objectURL = URL.createObjectURL(blob);\n          return resolve(this.objectURL);\n        },\n        () => {\n          this.blobToBuffer()\n            .then((buffer) => {\n              const utf8str = new TextDecoder('utf-8').decode(buffer);\n              const vttString = 'WEBVTT FILE\\r\\n\\r\\n';\n              const text = vttString.concat(WebVTTConverter.toVTT(utf8str));\n              const blob = new Blob([text], { type: 'text/vtt' });\n              this.objectURL = URL.createObjectURL(blob);\n              return resolve(this.objectURL);\n            });\n        },\n      );\n    });\n  }\n\n  release() {\n    URL.createObjectURL(this.objectURL);\n  }\n}\n\nwindow.WebVTTConverter = WebVTTConverter;\n\nexport default WebVTTConverter;\n"]},"metadata":{},"sourceType":"module"}