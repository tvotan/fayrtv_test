{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Menu,Icon,Label}from'semantic-ui-react';import{decodeEntities}from'../../utils';export var YouTubeSearchResult=function YouTubeSearchResult(props){var result=props;var setMedia=props.setMedia;return/*#__PURE__*/React.createElement(Menu.Item,{onClick:function onClick(e){setMedia(e,{value:result.url});}},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',alignItems:'center'}},/*#__PURE__*/React.createElement(\"img\",{style:{height:'40px'},src:result.img,alt:result.name}),/*#__PURE__*/React.createElement(Icon,{name:\"youtube\"}),/*#__PURE__*/React.createElement(\"div\",{style:{marginLeft:'5px'}},decodeEntities(result.name))));};export var MediaPathSearchResult=function MediaPathSearchResult(props){var result=props;var setMedia=props.setMedia;return/*#__PURE__*/React.createElement(Menu.Item,{onClick:function onClick(e){setMedia(e,{value:result.url});}},/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex'}},/*#__PURE__*/React.createElement(Icon,{name:\"file\"}),result.name));};export var StreamPathSearchResult=/*#__PURE__*/function(_React$Component){_inherits(StreamPathSearchResult,_React$Component);var _super=_createSuper(StreamPathSearchResult);function StreamPathSearchResult(){_classCallCheck(this,StreamPathSearchResult);return _super.apply(this,arguments);}_createClass(StreamPathSearchResult,[{key:\"render\",value:function render(){var _this=this;var result=this.props;var setMedia=this.props.setMedia;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Menu.Item,{onClick:/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var response,metadata,multiStreamSelection;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.props.launchMultiSelect([]);_context.next=3;return window.fetch(_this.props.streamPath+'/data?torrent='+encodeURIComponent(result.magnet));case 3:response=_context.sent;_context.next=6;return response.json();case 6:metadata=_context.sent;// console.log(metadata);\nif(metadata.files.filter(function(file){return file.length>10*1024*1024;}).length>1){// Multiple large files, present user selection\nmultiStreamSelection=metadata.files.map(function(file,i){return _objectSpread(_objectSpread({},file),{},{url:_this.props.streamPath+'/stream?torrent='+encodeURIComponent(result.magnet)+'&fileIndex='+i});});multiStreamSelection.sort(function(a,b){return a.name.localeCompare(b.name);});_this.props.launchMultiSelect(multiStreamSelection);}else{_this.props.launchMultiSelect(undefined);setMedia(e,{value:_this.props.streamPath+'/stream?torrent='+encodeURIComponent(result.magnet)});}case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}()},/*#__PURE__*/React.createElement(Label,{circular:true,empty:true,color:Number(result.seeders)?'green':'red'}),/*#__PURE__*/React.createElement(Icon,{name:\"film\"}),result.name+' - '+result.size+' - '+result.seeders+' peers'));}}]);return StreamPathSearchResult;}(React.Component);","map":{"version":3,"sources":["/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/src/components/SearchResult/SearchResult.tsx"],"names":["React","Menu","Icon","Label","decodeEntities","YouTubeSearchResult","props","result","setMedia","e","value","url","display","alignItems","height","img","name","marginLeft","MediaPathSearchResult","StreamPathSearchResult","launchMultiSelect","window","fetch","streamPath","encodeURIComponent","magnet","response","json","metadata","files","filter","file","length","multiStreamSelection","map","i","sort","a","b","localeCompare","undefined","Number","seeders","size","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Menu, Icon, Label } from 'semantic-ui-react';\nimport { decodeEntities } from '../../utils';\n\nexport const YouTubeSearchResult = (\n  props: SearchResult & { setMedia: Function }\n) => {\n  const result = props;\n  const setMedia = props.setMedia;\n  return (\n    <Menu.Item\n      onClick={(e) => {\n        setMedia(e, { value: result.url });\n      }}\n    >\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <img style={{ height: '40px' }} src={result.img} alt={result.name} />\n        <Icon name=\"youtube\" />\n        <div style={{ marginLeft: '5px' }}>{decodeEntities(result.name)}</div>\n      </div>\n    </Menu.Item>\n  );\n};\n\nexport const MediaPathSearchResult = (\n  props: SearchResult & { setMedia: Function }\n) => {\n  const result = props;\n  const setMedia = props.setMedia;\n  return (\n    <Menu.Item\n      onClick={(e) => {\n        setMedia(e, { value: result.url });\n      }}\n    >\n      <div style={{ display: 'flex' }}>\n        <Icon name=\"file\" />\n        {result.name}\n      </div>\n    </Menu.Item>\n  );\n};\n\nexport class StreamPathSearchResult extends React.Component<\n  SearchResult & {\n    setMedia: Function;\n    launchMultiSelect: Function;\n    streamPath: string;\n  }\n> {\n  render() {\n    const result = this.props;\n    const setMedia = this.props.setMedia;\n    return (\n      <React.Fragment>\n        <Menu.Item\n          onClick={async (e) => {\n            this.props.launchMultiSelect([]);\n            let response = await window.fetch(\n              this.props.streamPath +\n                '/data?torrent=' +\n                encodeURIComponent(result.magnet!)\n            );\n            let metadata = await response.json();\n            // console.log(metadata);\n            if (\n              metadata.files.filter(\n                (file: any) => file.length > 10 * 1024 * 1024\n              ).length > 1\n            ) {\n              // Multiple large files, present user selection\n              const multiStreamSelection = metadata.files.map(\n                (file: any, i: number) => ({\n                  ...file,\n                  url:\n                    this.props.streamPath +\n                    '/stream?torrent=' +\n                    encodeURIComponent(result.magnet!) +\n                    '&fileIndex=' +\n                    i,\n                })\n              );\n              multiStreamSelection.sort((a: any, b: any) =>\n                a.name.localeCompare(b.name)\n              );\n              this.props.launchMultiSelect(multiStreamSelection);\n            } else {\n              this.props.launchMultiSelect(undefined);\n              setMedia(e, {\n                value:\n                  this.props.streamPath +\n                  '/stream?torrent=' +\n                  encodeURIComponent(result.magnet!),\n              });\n            }\n          }}\n        >\n          <Label\n            circular\n            empty\n            color={Number(result.seeders) ? 'green' : 'red'}\n          />\n          <Icon name=\"film\" />\n          {result.name +\n            ' - ' +\n            result.size +\n            ' - ' +\n            result.seeders +\n            ' peers'}\n        </Menu.Item>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}