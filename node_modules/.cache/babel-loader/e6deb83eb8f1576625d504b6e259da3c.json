{"ast":null,"code":"import _classCallCheck from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{BaseClient}from'./base';//import { Member } from './types';\nimport{EVENT}from'./events';export var NekoClient=/*#__PURE__*/function(_BaseClient){_inherits(NekoClient,_BaseClient);var _super=_createSuper(NekoClient);function NekoClient(){_classCallCheck(this,NekoClient);return _super.apply(this,arguments);}_createClass(NekoClient,[{key:\"login\",value:function login(url,password,displayname){this.connect(url,password,displayname);}},{key:\"logout\",value:function logout(){this.disconnect();}/////////////////////////////\n// Internal Events\n/////////////////////////////\n},{key:EVENT.CONNECTING,value:function value(){}},{key:EVENT.CONNECTED,value:function value(){this.emit(EVENT.CONNECTED);}},{key:EVENT.DISCONNECTED,value:function value(reason){console.warn(reason);this.emit(EVENT.DISCONNECTED);}},{key:EVENT.TRACK,value:function value(event){var track=event.track,streams=event.streams;this.emit(EVENT.TRACK,track,streams[0]);}},{key:EVENT.DATA,value:function value(data){console.log('[DATA]',data);}/////////////////////////////\n// System Events\n/////////////////////////////\n},{key:EVENT.SYSTEM.DISCONNECT,value:function value(_ref){var message=_ref.message;this.onDisconnected(new Error(message));}/////////////////////////////\n// Control Events\n/////////////////////////////\n},{key:EVENT.CONTROL.LOCKED,value:function value(_ref2){//this.$accessor.remote.setHost(id);\n// const member = this.member(id);\n// if (!member) {\n//   return;\n// }\nvar id=_ref2.id;}},{key:EVENT.CONTROL.RELEASE,value:function value(_ref3){//this.$accessor.remote.reset();\n// const member = this.member(id);\n// if (!member) {\n//   return;\n// }\nvar id=_ref3.id;}},{key:EVENT.CONTROL.GIVE,value:function value(_ref4){// const member = this.member(target);\n// if (!member) {\n//   return;\n// }\n//this.$accessor.remote.setHost(member);\nvar id=_ref4.id,target=_ref4.target;}},{key:EVENT.CONTROL.CLIPBOARD,value:function value(_ref5){var text=_ref5.text;this.emit(EVENT.CONTROL.CLIPBOARD,text);}/////////////////////////////\n// Screen Events\n/////////////////////////////\n},{key:EVENT.SCREEN.CONFIGURATIONS,value:function value(_ref6){// console.log('[CONFIGURATIONS]', configurations);\n//this.$accessor.video.setConfigurations(configurations);\nvar configurations=_ref6.configurations;}},{key:EVENT.SCREEN.RESOLUTION,value:function value(_ref7){var id=_ref7.id,width=_ref7.width,height=_ref7.height,rate=_ref7.rate;this.emit(EVENT.SCREEN.RESOLUTION,{width:width,height:height,rate:rate});}}]);return NekoClient;}(BaseClient);export{default as VBrowser}from'./VBrowser';","map":{"version":3,"sources":["/Users/tinvotan/Projects/fayrtv/fayr_test/fayrtv_test/src/components/VBrowser/index.ts"],"names":["BaseClient","EVENT","NekoClient","url","password","displayname","connect","disconnect","CONNECTING","CONNECTED","emit","DISCONNECTED","reason","console","warn","TRACK","event","track","streams","DATA","data","log","SYSTEM","DISCONNECT","message","onDisconnected","Error","CONTROL","LOCKED","id","RELEASE","GIVE","target","CLIPBOARD","text","SCREEN","CONFIGURATIONS","configurations","RESOLUTION","width","height","rate","default","VBrowser"],"mappings":"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","sourcesContent":["import EventEmitter from 'eventemitter3';\n\nimport { BaseClient } from './base';\n//import { Member } from './types';\nimport { EVENT } from './events';\nimport {\n  ControlClipboardPayload,\n  ControlPayload,\n  ControlTargetPayload,\n  DisconnectPayload,\n  ScreenConfigurationsPayload,\n  ScreenResolutionPayload,\n} from './messages';\n\nexport class NekoClient extends BaseClient implements EventEmitter<any> {\n  login(url: string, password: string, displayname: string) {\n    this.connect(url, password, displayname);\n  }\n\n  logout() {\n    this.disconnect();\n  }\n\n  /////////////////////////////\n  // Internal Events\n  /////////////////////////////\n  protected [EVENT.CONNECTING]() {}\n\n  protected [EVENT.CONNECTED]() {\n    this.emit(EVENT.CONNECTED);\n  }\n\n  protected [EVENT.DISCONNECTED](reason?: Error) {\n    console.warn(reason);\n    this.emit(EVENT.DISCONNECTED);\n  }\n\n  protected [EVENT.TRACK](event: RTCTrackEvent) {\n    const { track, streams } = event;\n    this.emit(EVENT.TRACK, track, streams[0]);\n  }\n\n  protected [EVENT.DATA](data: any) {\n    console.log('[DATA]', data);\n  }\n\n  /////////////////////////////\n  // System Events\n  /////////////////////////////\n  protected [EVENT.SYSTEM.DISCONNECT]({ message }: DisconnectPayload) {\n    this.onDisconnected(new Error(message));\n  }\n\n  /////////////////////////////\n  // Control Events\n  /////////////////////////////\n  protected [EVENT.CONTROL.LOCKED]({ id }: ControlPayload) {\n    //this.$accessor.remote.setHost(id);\n    // const member = this.member(id);\n    // if (!member) {\n    //   return;\n    // }\n  }\n\n  protected [EVENT.CONTROL.RELEASE]({ id }: ControlPayload) {\n    //this.$accessor.remote.reset();\n    // const member = this.member(id);\n    // if (!member) {\n    //   return;\n    // }\n  }\n\n  protected [EVENT.CONTROL.GIVE]({ id, target }: ControlTargetPayload) {\n    // const member = this.member(target);\n    // if (!member) {\n    //   return;\n    // }\n    //this.$accessor.remote.setHost(member);\n  }\n\n  protected [EVENT.CONTROL.CLIPBOARD]({ text }: ControlClipboardPayload) {\n    this.emit(EVENT.CONTROL.CLIPBOARD, text);\n  }\n\n  /////////////////////////////\n  // Screen Events\n  /////////////////////////////\n  protected [EVENT.SCREEN.CONFIGURATIONS]({\n    configurations,\n  }: ScreenConfigurationsPayload) {\n    // console.log('[CONFIGURATIONS]', configurations);\n    //this.$accessor.video.setConfigurations(configurations);\n  }\n\n  protected [EVENT.SCREEN.RESOLUTION]({\n    id,\n    width,\n    height,\n    rate,\n  }: ScreenResolutionPayload) {\n    this.emit(EVENT.SCREEN.RESOLUTION, { width, height, rate });\n  }\n}\n\nexport { default as VBrowser } from './VBrowser';\n"]},"metadata":{},"sourceType":"module"}